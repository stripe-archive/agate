package com.stripe.agate
package ops

import com.stripe.agate.tensor.{DataType, OnnxNumber, Shape, Storage}
import com.stripe.agate.tensor.Tensor
import com.stripe.agate.tensor.TensorParser.Interpolation
import java.lang.Math
import org.scalacheck.{Gen, Prop, Properties}
import org.typelevel.claimant.Claim
import shapeless.HNil
import scala.util.Success

import DataType.Float32
import com.stripe.agate.laws.Check._
import Prop.{forAllNoShrink => forAll}
import Shape.Axes
import TestImplicits._

// for methodology on generating test cases see:
//
// https://git.corp.stripe.com/gist/erik/82e405ca1d48739c8fe9b898f988c6bc

object LayerNormTest extends Properties("LayerNormTest") {
  def simpleTest(n: Long, input: Tensor[Float32.type], expected: Tensor[Float32.type]): Prop = {
    require(input.dims.totalSize % n == 0L, s"${input.dims.totalSize} % $n")
    require(input.axes == expected.axes)
    val weight = Tensor.one(Shape.axes(n))
    val bias = Tensor.zero(Shape.axes(n))
    val eps: Double = 1e-5
    val got = LayerNorm(Float32)(input, List(n), Some(weight), Some(bias), eps).get
    got =~= expected
  }

  def build(axes: Axes)(f: Int => Float): Tensor[Float32.type] = {
    val n = axes.totalSize.toInt
    val arr = (0 until n).map(f).toArray
    Tensor(Float32, axes.asRowMajorDims)(Storage.ArrayStorage(arr, 0))
  }

  val axes212 = Shape.axes(2L, 1L, 2L)
  val axes313 = Shape.axes(3L, 1L, 3L)
  val axes3218 = Shape.axes(32L, 1L, 8L)

  property("simpleTest(ones) 2x1x2") =
    simpleTest(2L, build(axes212)(_ => 1f), tensor"""[[[0 0]] [[0 0]]]""")

  property("simpleTest(mono) 2x1x2") = simpleTest(2L, build(axes212)(_.toFloat), tensor"""[
[[-0.9999799728393555, 0.9999799728393555]],
[[-0.9999799728393555, 0.9999799728393555]]
]""")

  property("simpleTest(cos) 2x1x2") = simpleTest(
    2L,
    build(axes212)(i => Math.cos(i.toDouble).toFloat),
    tensor"""[
[[0.9999053478240967, -0.9999053478240967]],
[[0.9999393224716187, -0.9999392628669739]]
]"""
  )

  property("simpleTest(sin) 2x1x2") = simpleTest(
    2L,
    build(axes212)(i => Math.sin(i.toDouble).toFloat),
    tensor"""[
[[-0.9999716877937317, 0.9999716877937317]],
[[0.9999662041664124, -0.9999662041664124]]
]"""
  )

  property("simpleTest(ones) 3x1x3") =
    simpleTest(3L, build(axes313)(_ => 1f), tensor"""[[[0 0 0]] [[0 0 0]] [[0 0 0]]]""")

  property("simpleTest(mono) 3x1x3") = simpleTest(
    3L,
    build(axes313)(_.toFloat),
    tensor"""[
[[-1.2247357368469238, 0.0, 1.2247357368469238]],
[[-1.2247357368469238, 0.0, 1.2247357368469238]],
[[-1.2247357368469238, 0.0, 1.2247357368469238]]
]"""
  )

  property("simpleTest(cos) 3x1x3") = simpleTest(
    3L,
    build(axes313)(i => Math.cos(i.toDouble).toFloat),
    tensor"""[
[[1.0600059032440186, 0.2807052433490753, -1.340710997581482]],
[[-0.995812177658081, -0.371701180934906, 1.3675135374069214]],
[[0.9109655618667603, 0.48128899931907654, -1.3922544717788696]]
]"""
  )

  property("simpleTest(sin) 3x1x3") = simpleTest(
    3L,
    build(axes313)(i => Math.sin(i.toDouble).toFloat),
    tensor"""[
[[-1.4109992980957031, 0.6235043406486511, 0.7874947190284729]],
[[1.3929606676101685, -0.4851047098636627, -0.9078560471534729]],
[[-1.3683297634124756, 0.3748059570789337, 0.9935240149497986]]
]"""
  )

  property("simpleTest(cos) 32x1x8") = simpleTest(
    8L,
    build(axes3218)(i => Math.cos(i.toDouble).toFloat),
    tensor"""[
 [[1.1291309595108032, 0.49241936206817627, -0.8323256969451904, -1.6271398067474365, -1.1612744331359863, 0.13695593178272247, 1.0739641189575195, 0.7882694602012634]],
 [[-0.07459000498056412, -1.213698148727417, -1.106488823890686, 0.1484701782464981, 1.3973753452301025, 1.491989016532898, 0.3453238308429718, -0.9883815050125122]],
 [[-1.138027310371399, -0.1679162234067917, 1.161790370941162, 1.6285662651062012, 0.8032599091529846, -0.5553458333015442, -1.198155164718628, -0.5341721177101135]],
 [[0.4079071581363678, 1.2248581647872925, 0.7288247346878052, -0.6241422891616821, -1.5901312828063965, -1.28101646900177, 0.019003568217158318, 1.1146962642669678]],
 [[1.0545859336853027, -0.18978814780712128, -1.4162395000457764, -1.4971742630004883, -0.35818159580230713, 0.953554093837738, 1.2320289611816406, 0.22121448814868927]],
 [[-0.6882250905036926, -1.1362977027893066, -0.31489869952201843, 1.0207816362380981, 1.6427247524261475, 0.9791192412376404, -0.3599192500114441, -1.1432849168777466]],
 [[-0.8685859441757202, 0.5523940920829773, 1.5559278726577759, 1.2193714380264282, -0.1478470414876938, -1.2887132167816162, -1.1543197631835938, 0.13177239894866943]],
 [[0.9052451848983765, 0.9692773818969727, -0.10237549990415573, -1.3244407176971436, -1.5733572244644165, -0.6202722787857056, 0.6585522294044495, 1.0873708724975586]],
 [[0.5864976644515991, -0.8743664622306824, -1.5436245203018188, -0.805963933467865, 0.6604137420654297, 1.5073274374008179, 0.9561287760734558, -0.4864128530025482]],
 [[-1.055559515953064, -0.7392032146453857, 0.5038750171661377, 1.5307949781417847, 1.3974109888076782, 0.22635579109191895, -0.9057078957557678, -0.9579659104347229]],
 [[-0.24129508435726166, 1.1067461967468262, 1.3696331977844238, 0.3056687116622925, -1.106943130493164, -1.5694535970687866, -0.6566326022148132, 0.7922763228416443]],
 [[1.1346642971038818, 0.45539066195487976, -0.8751886487007141, -1.6337451934814453, -1.1228655576705933, 0.1877499520778656, 1.0931273698806763, 0.7608669996261597]],
 [[-0.11712301522493362, -1.2210841178894043, -1.0641593933105469, 0.2093753218650818, 1.4286381006240845, 1.472644329071045, 0.30093488097190857, -1.0092259645462036]],
 [[-1.133105754852295, -0.12592358887195587, 1.1973443031311035, 1.620091438293457, 0.7536462545394897, -0.6053857803344727, -1.2075167894363403, -0.49915024638175964]],
 [[0.44503992795944214, 1.2189829349517822, 0.6797518134117126, -0.6768869161605835, -1.6036456823349, -1.248466968536377, 0.062099702656269073, 1.123125433921814]],
 [[1.037588119506836, -0.2342514842748642, -1.4401423931121826, -1.4713939428329468, -0.2992737889289856, 0.9985764026641846, 1.2289190292358398, 0.1799781620502472]],
 [[-0.718001127243042, -1.1198526620864868, -0.26400989294052124, 1.0626693964004517, 1.640442132949829, 0.9381070733070374, -0.39861243963241577, -1.1407426595687866]],
 [[-0.8391039371490479, 0.5946297645568848, 1.563084363937378, 1.175866961479187, -0.21101634204387665, -1.3224714994430542, -1.1366318464279175, 0.17564259469509125]],
 [[0.9270781874656677, 0.9445123076438904, -0.15218432247638702, -1.3547136783599854, -1.5574760437011719, -0.5740524530410767, 0.6914018988609314, 1.0754340887069702]],
 [[0.5470877289772034, -0.9081565737724304, -1.530900478363037, -0.7485960125923157, 0.7195096015930176, 1.5236469507217407, 0.9244958162307739, -0.5270870327949524]],
 [[-1.069078803062439, -0.7075116634368896, 0.5508012771606445, 1.5489728450775146, 1.369288682937622, 0.1769496351480484, -0.9318132400512695, -0.9376085996627808]],
 [[-0.1975286453962326, 1.1271284818649292, 1.3386452198028564, 0.24255387485027313, -1.1534041166305542, -1.5657912492752075, -0.6154610514640808, 0.8238575458526611]],
 [[1.1390178203582764, 0.4176830053329468, -0.9173436164855957, -1.638644814491272, -1.083059310913086, 0.2386099398136139, 1.1112263202667236, 0.7325103878974915]],
 [[-0.15918126702308655, -1.2267369031906128, -1.020679235458374, 0.26954326033592224, 1.4577059745788574, 1.4514175653457642, 0.25645962357521057, -1.0285290479660034]],
 [[-1.1267993450164795, -0.0834597498178482, 1.231746792793274, 1.6096255779266357, 0.7027565836906433, -0.6550889611244202, -1.2155143022537231, -0.4632667005062103]],
 [[0.48134538531303406, 1.211681604385376, 0.6302411556243896, -0.7284024357795715, -1.6151185035705566, -1.214664340019226, 0.10478439182043076, 1.1301325559616089]],
 [[1.0190536975860596, -0.2787410318851471, -1.4622795581817627, -1.4434218406677246, -0.23950563371181488, 1.0425939559936523, 1.2241207361221313, 0.13817952573299408]],
 [[-0.7468318343162537, -1.1022964715957642, -0.2131306231021881, 1.10317063331604, 1.6364059448242188, 0.8963214755058289, -0.4366528391838074, -1.1369863748550415]],
 [[-0.8082110285758972, 0.6361796259880066, 1.5679209232330322, 1.1303743124008179, -0.2741818428039551, -1.354405164718628, -1.1171432733535767, 0.21946635842323303]],
 [[0.9479281902313232, 0.9188482761383057, -0.2017306238412857, -1.3835537433624268, -1.5400582551956177, -0.5273545384407043, 0.7234821319580078, 1.0624383687973022]],
 [[0.5068123936653137, -0.9405257105827332, -1.5157698392868042, -0.6900433301925659, 0.7774848341941833, 1.5375758409500122, 0.8914057016372681, -0.5669398903846741]],
 [[-1.0815459489822388, -0.6750444769859314, 0.5972631573677063, 1.56562340259552, 1.3397302627563477, 0.12726876139640808, -0.9570295214653015, -0.9162657260894775]]
]"""
  )

  property("simpleTest(sin) 32x1x8") = simpleTest(
    8L,
    build(axes3218)(i => Math.sin(i.toDouble).toFloat),
    tensor"""[
 [[-0.1043693870306015, 1.1644566059112549, 1.2667299509048462, 0.10842076689004898, -1.2455267906188965, -1.5502995252609253, -0.5256906747817993, 0.8862788081169128]],
 [[1.1442464590072632, 0.3354131281375885, -1.0043379068374634, -1.6432456970214844, -0.9939014911651611, 0.3466908037662506, 1.1459968090057373, 0.6691381335258484]],
 [[-0.24667830765247345, -1.2331304550170898, -0.9249471426010132, 0.39452922344207764, 1.5121783018112183, 1.4004384279251099, 0.162043035030365, -1.0644330978393555]],
 [[-1.1086955070495605, 0.00812074076384306, 1.3006917238235474, 1.580633521080017, 0.5905690789222717, -0.759240984916687, -1.2277874946594238, -0.38429102301597595]],
 [[0.555614709854126, 1.1916296482086182, 0.5239278078079224, -0.8336091041564941, -1.6328675746917725, -1.1390132904052734, 0.19390642642974854, 1.140411376953125]],
 [[0.974571943283081, -0.3729877173900604, -1.5030900239944458, -1.3767242431640625, -0.11007026582956314, 1.1323158740997314, 1.2081902027130127, 0.04779418930411339]],
 [[-0.8049092292785645, -1.0614598989486694, -0.10525854676961899, 1.1845676898956299, 1.6221585273742676, 0.8051949143409729, -0.5152105093002319, -1.125083088874817]],
 [[-0.7381170988082886, 0.721724808216095, 1.570312261581421, 1.0274577140808105, -0.40774068236351013, -1.4157682657241821, -1.0698490142822266, 0.31198036670684814]],
 [[0.9889302849769592, 0.8614356517791748, -0.30599313974380493, -1.4400274753570557, -1.4980416297912598, -0.426697313785553, 0.7890161871910095, 1.0313775539398193]],
 [[0.41880011558532715, -1.0042533874511719, -1.4758151769638062, -0.5623334050178528, 0.8963408470153809, 1.5591093301773071, 0.8166256546974182, -0.6484740376472473]],
 [[-1.1044728755950928, -0.6035619378089905, 0.6942858695983887, 1.5958353281021118, 1.2722059488296509, 0.020941199734807014, -1.007551908493042, -0.867681622505188]],
 [[-0.06061118096113205, 1.1792056560516357, 1.2302120923995972, 0.04551317170262337, -1.2856844663619995, -1.539483904838562, -0.4825429618358612, 0.9133915305137634]],
 [[1.1447643041610718, 0.2957019805908203, -1.0439906120300293, -1.6426063776016235, -0.9497805833816528, 0.3975057601928711, 1.1605639457702637, 0.6378417015075684]],
 [[-0.2868916988372803, -1.2335706949234009, -0.8784924745559692, 0.45188573002815247, 1.5344202518463135, 1.3738340139389038, 0.1177690401673317, -1.0789541006088257]],
 [[-1.0979063510894775, 0.051788169890642166, 1.331051230430603, 1.5637341737747192, 0.5359092950820923, -0.8074458241462708, -1.2312568426132202, -0.34587371349334717]],
 [[0.5891970992088318, 1.180138111114502, 0.47347161173820496, -0.881096363067627, -1.638182282447815, -1.1017248630523682, 0.235059455037117, 1.1431373357772827]],
 [[0.9512308239936829, -0.41706395149230957, -1.5192161798477173, -1.3419123888015747, -0.048164498060941696, 1.1725614070892334, 1.1979355812072754, 0.004629191011190414]],
 [[-0.8307512402534485, -1.0406291484832764, -0.054644133895635605, 1.220693588256836, 1.612844467163086, 0.7612668871879578, -0.5511027574539185, -1.1176778078079224]],
 [[-0.7031292915344238, 0.7605161666870117, 1.5676618814468384, 0.9762217998504639, -0.47003671526908875, -1.4414304494857788, -1.0448641777038574, 0.3550606071949005]],
 [[1.0066723823547363, 0.833078145980835, -0.3545646667480469, -1.464342713356018, -1.4759310483932495, -0.3786756098270416, 0.8186122179031372, 1.0151512622833252]],
 [[0.3764074146747589, -1.0317573547363281, -1.4534318447113037, -0.5009303689002991, 0.9500216245651245, 1.5654253959655762, 0.7794817686080933, -0.68521648645401]],
 [[-1.1135591268539429, -0.5687506794929504, 0.7391109466552734, 1.6075836420059204, 1.238197922706604, -0.02943490631878376, -1.0298590660095215, -0.8432890176773071]],
 [[-0.01703176461160183, 1.192148208618164, 1.1921266317367554, -0.017076820135116577, -1.323725938796997, -1.5264936685562134, -0.4389561414718628, 0.9390095472335815]],
 [[1.1440035104751587, 0.2553942799568176, -1.082738995552063, -1.640122890472412, -0.9043011665344238, 0.4482150375843048, 1.1739286184310913, 0.6056217551231384]],
 [[-0.3264158368110657, -1.2324168682098389, -0.8312739729881287, 0.5082040429115295, 1.5545072555541992, 1.3456692695617676, 0.07369476556777954, -1.0919687747955322]],
 [[-1.0856375694274902, 0.09574073553085327, 1.3599656820297241, 1.5447148084640503, 0.4801303446292877, -0.8550134301185608, -1.2331916093826294, -0.30670884251594543]],
 [[0.6218739151954651, 1.1673873662948608, 0.4228334426879883, -0.9272485971450806, -1.641599416732788, -1.063448190689087, 0.27565544843673706, 1.1445460319519043]],
 [[0.9263670444488525, -0.46083584427833557, -1.533267617225647, -1.3049396276474, 0.014224590733647346, 1.2113914489746094, 1.1858912706375122, -0.038831211626529694]],
 [[-0.8556272983551025, -1.0188071727752686, -0.004181375727057457, 1.2554078102111816, 1.6018999814987183, 0.7167317271232605, -0.5862772464752197, -1.1091465950012207]],
 [[-0.6669536828994751, 0.7982311844825745, 1.5625683069229126, 0.9233296513557434, -0.5317716002464294, -1.4649221897125244, -1.0181877613067627, 0.39770618081092834]],
 [[1.0234055519104004, 0.8038908839225769, -0.40277543663978577, -1.4871901273727417, -1.4523471593856812, -0.33028116822242737, 0.8473856449127197, 0.997911810874939]],
 [[0.33353209495544434, -1.0575919151306152, -1.4288442134857178, -0.43889710307121277, 1.0020965337753296, 1.5692939758300781, 0.741216242313385, -0.7208055853843689]]
]"""
  )
}
